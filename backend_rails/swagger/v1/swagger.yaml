---
openapi: 3.0.1
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    TagResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        name:
          type: string
    TagData:
      type: object
      properties:
        name:
          type: string
    MemoryResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        key:
          type: string
        value:
          type: string
        visibility:
          type: boolean
    MemoryData:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        visibility:
          type: boolean
    AuthUser:
      type: object
      properties:
        token:
          type: string
        exp:
          type: string
        username:
          type: string
        userId:
          type: string
        accessLevel:
          type: boolean
    AuthData:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
security:
  - ApiKeyAuth: []

info:
  title: Memory app
  version: v1
paths:
  '/auth/login':
    post:
      summary: Authorization
      description: "example data: username: registered_user1, password:111"
      tags:
        - Login
      responses:
        '200':
          description: Login authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthData'

  '/auth/check':
    get:
      summary: Check token
      tags:
        - Login
      responses:
        '200':
          description: Login authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
        '401':
          description: Login authorized

  '/auth/sign_up':
    get:
      summary: Google Auth
      description: This one you can't reproduce, just copy and paste url on browser
      tags:
        - Login
      responses:
        '200':
          description: Login authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'

  '/memories':
    get:
      summary: Return all Memories
      tags:
        - Memories
      responses:
        '200':
          description: token generated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemoryResponse'
    post:
      summary: Create Memory
      tags:
        - Memories
      responses:
        '201':
          description: Memory created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryData'

  '/memories/{memoryId}':
    put:
      summary: Update Memory
      tags:
        - Memories
      parameters:
        - in: path
          name: memoryId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Memory updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryData'
    get:
      summary: Find Memory
      tags:
        - Memories
      parameters:
        - in: path
          name: memoryId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Memory updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryResponse'
    delete:
      summary: Delete Memory
      tags:
        - Memories
      parameters:
        - in: path
          name: memoryId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Memory deleted

  '/tags':
    get:
      summary: Return all tags
      tags:
        - tags
      responses:
        '200':
          description: token generated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
    post:
      summary: Create Tag
      tags:
        - tags
      responses:
        '201':
          description: Tag created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryData'

  '/tags/{tagId}':
    put:
      summary: Update Tag
      tags:
        - tags
      parameters:
        - in: path
          name: tagId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Tag updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryData'
    get:
      summary: Find Tag
      tags:
        - tags
      parameters:
        - in: path
          name: tagId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Tag updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
    delete:
      summary: Delete Tag
      tags:
        - tags
      parameters:
        - in: path
          name: tagId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Tag deleted
servers:
  - url: https://memory-app-back.herokuapp.com
  - url: http://localhost:3000

