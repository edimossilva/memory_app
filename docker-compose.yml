version: '3'
services:
  db_memory_app:
    image: postgres
    container_name: db_memory_app
    volumes:
      - db_memory_app_volume:/data/postgres
    environment:
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - '5444:5432'

  memory_app_back:
    image: edimossilva/memory_app_rails
    container_name: memory_app_back
    volumes:
      - ./backend_rails:/app
    depends_on:
      - db_memory_app
    env_file:
      - .env
    environment:
      RUBYOPT: '-W:no-deprecated -W:no-experimental'
      RAILS_MASTER_KEY: '${RAILS_MASTER_KEY}'
      DATABASE_USERNAME: 'postgres'
      DATABASE_PASSWORD: 'postgres'
      DATABASE_HOST: 'db_memory_app'
      DATABASE_PORT: '5432'
    tty: true
    command: rails s -b 0
    ports:
      - '3000:3000'

  memory_app_vue:
    image: edimossilva/memory_app_vue
    container_name: memory_app_vue
    volumes:
      - ./frontend_vue:/app
    ports:
      - '8080:8080'
    tty: true
    command: sh -c "yarn && yarn serve"
    network_mode: host

  memory_e2e:
    image: edimossilva/memory_e2e
    container_name: memory_e2e
    tty: true
    volumes:
      - ./e2e/cypress:/app
    command: sh
    network_mode: host
    environment:
    - DISPLAY

volumes:
  db_memory_app_volume:
# docker-compose build
# docker-compose up -d
# docker-compose exec memory_app_back rake db:create
# docker-compose exec memory_app_back rake db:migrate
# docker-compose exec memory_app_back rspec
# docker-compose exec memory_app_vue yarn test:unit
